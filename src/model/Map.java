package model;

import java.util.ArrayList;

public class Map {
    private int[][] map;
    private int x,y;
    private int nv;
    private ArrayList<Integer> spawns;

    //C'est ici que la map modèle est faite

    public Map(int n) {
        this.spawns= new ArrayList<Integer>();
        this.nv=n;
        this.map = chargement();
        this.x = 640;
        this.y = 640;
    }

    public ArrayList<Integer> getSpawns(){
        return spawns;
    }

    //On ajoute à une arraylist les coordonées des spawns possibles des mob sur la map
    public void ajouterSpawn(int x, int y){
        this.spawns.add(x);
        this.spawns.add(y);
    }

    //C'est ici qu'on initialise le tableau de la map, et qu'on ajoute les spawn
    public int[][] chargement() {
        switch (this.nv) {
            case 1:
                this.ajouterSpawn(0,160);
                this.ajouterSpawn(0,480);
                return new int[][]{
                        {29,29,29,29,43,29,29,29,29,29,29,29,43,29,26,29,29,29,29,43,29},
                        {29,29,29,19,10,10,10,10,10,10,10,10,10,10,10,10,20,29,29,29,29},
                        {29,27,29,12,2,1,1,1,1,1,1,1,1,1,1,3,13,29,27,29,29},
                        {29,29,29,12,0,18,11,11,11,11,11,11,11,11,21,0,13,29,29,29,29},
                        {10,10,10,14,0,13,29,29,44,29,29,29,29,29,12,0,16,10,20,29,29},
                        {1,1,1,1,5,13,29,29,43,34,41,37,29,29,12,4,1,3,13,29,29},
                        {11,11,11,11,11,15,29,29,29,35,40,38,45,29,17,11,21,0,13,31,29},
                        {44,29,29,29,29,29,44,29,29,36,42,39,45,45,44,29,12,0,13,32,29},
                        {43,29,29,29,29,29,43,29,29,29,29,29,29,29,43,29,12,0,13,33,29},
                        {55,48,47,10,10,10,10,10,10,10,10,10,10,10,10,10,14,0,13,29,29},
                        {54,49,46,100,1,1,1,1,1,1,1,1,1,1,1,1,1,6,13,29,26},
                        {53,51,50,11,11,11,11,11,11,11,11,11,11,11,11,11,21,0,13,29,29},
                        {29,29,29,29,29,27,29,44,29,29,29,29,29,29,29,29,12,0,13,29,29},
                        {29,29,29,29,29,29,29,43,29,29,29,44,29,29,29,29,12,0,13,29,29},
                        {10,10,10,10,10,20,29,29,29,29,29,43,29,29,19,10,14,0,13,27,29},
                        {1,1,1,1,3,13,29,29,44,29,29,29,29,29,12,2,1,5,13,29,29},
                        {11,11,11,21,0,13,29,29,43,29,29,29,29,29,12,0,18,11,15,29,29},
                        {29,44,29,12,0,16,10,10,10,10,10,10,10,10,14,0,13,29,29,29,29},
                        {29,43,29,12,4,1,1,1,1,1,1,1,1,1,1,5,13,29,26,29,29},
                        {29,27,29,17,11,11,11,11,11,11,11,11,11,11,11,11,15,29,29,29,44},
                        {29,29,29,29,29,26,29,29,29,29,29,29,29,29,29,29,29,29,29,29,43}};

            case 2:
                this.ajouterSpawn(0,320);
                this.ajouterSpawn(640,320);
                this.ajouterSpawn(320,640);
                return new int[][]{
                        {44,44,44,44,44,44,29,55,48,47,10,20,29,29,29,44,44,44,44,44,44},
                        {43,43,43,43,43,43,29,54,49,46,100,13,29,29,29,43,43,43,43,43,43},
                        {29,29,29,26,29,29,29,53,51,50,0,13,27,29,29,29,29,29,29,29,29},
                        {29,29,29,29,29,29,29,29,29,12,0,13,29,29,29,29,29,29,29,29,29},
                        {29,27,29,29,29,29,29,29,29,12,0,13,29,29,29,29,29,29,29,26,29},
                        {29,29,29,29,19,10,10,10,10,14,0,16,10,10,10,10,20,29,29,29,29},
                        {29,29,29,29,12,2,1,1,1,1,9,1,1,1,1,3,13,29,29,31,29},
                        {29,26,29,29,12,0,18,11,11,11,11,11,11,11,21,0,13,29,29,32,29},
                        {29,29,29,29,12,0,13,29,29,34,41,37,29,29,12,0,13,27,29,33,29},
                        {10,10,10,10,14,0,13,29,29,35,40,38,29,29,12,0,16,10,10,10,10},
                        {1,1,1,1,1,6,13,29,29,36,42,39,29,29,12,8,1,1,1,1,1},
                        {11,11,11,11,21,0,16,10,10,10,10,10,10,10,14,0,11,11,11,11,11},
                        {29,29,29,29,12,4,1,1,1,1,7,1,1,1,1,5,29,29,29,29,29},
                        {29,29,29,29,17,11,11,11,11,21,0,18,11,11,11,11,29,29,29,29,29},
                        {29,27,29,29,29,29,29,29,29,12,0,13,29,29,29,29,29,29,22,29,29},
                        {29,29,29,29,29,22,29,29,29,12,0,13,29,29,26,29,29,29,23,29,29},
                        {29,29,29,26,29,24,29,29,29,12,0,13,29,29,29,29,29,29,24,29,29},
                        {29,29,29,29,29,29,29,29,29,12,0,13,29,27,29,29,29,29,29,29,29},
                        {29,29,29,29,29,29,26,29,29,12,0,13,29,29,29,29,29,29,29,29,29},
                        {44,44,44,44,44,44,29,29,29,12,0,13,29,29,29,44,44,44,44,44,44},
                        {43,43,43,43,43,43,29,29,29,12,0,13,29,29,29,43,43,43,43,43,43}};

            default:break;
        }

        return null;
    }

    public int[][] getMap() {
        return map;
    }

    public void setMap(int[][] map) {
        this.map = map;
    }

    public int quelleCase(int x, int y){
        return this.map[y/32][x/32];
    }


}
